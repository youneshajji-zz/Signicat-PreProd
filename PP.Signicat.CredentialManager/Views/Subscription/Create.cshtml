@model PP.Signicat.CredentialManager.Models.SubscriptionModel

<h2>Create Subscription</h2>

<a href="@Url.Action("Index", "Subscription")" class="btn btn-info">
    Back
    <span class="glyphicon glyphicon-plus-backward" aria-hidden="true"></span>
</a>

@using (Html.BeginForm())
{
    @*@Html.AntiForgeryToken()*@

    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="col-lg-6">

            <div class="form-group">
                @Html.LabelFor(model => model.customer, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.customer, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.customer, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.subscription, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.subscription, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.subscription, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.partner, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.partner, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.partner, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.orgurl, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.orgurl, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.orgurl, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.discoveryurl, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.discoveryurl, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.discoveryurl, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.username, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.username, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.username, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.password, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.PasswordFor(model => model.password, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.password, "", new { @class = "text-danger" })
                </div>
            </div>

        </div>
        <div class="col-lg-6">
            <div class="form-group">
                @Html.LabelFor(model => model.domain, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.domain, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.domain, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.servicestarted, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.servicestarted, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.servicestarted, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.serviceended, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.serviceended, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.serviceended, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.usercount, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.usercount, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.usercount, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.volumelicense, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.volumelicense, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.volumelicense, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input id="submit" type="submit" value="Save" class="btn btn-success" />
                </div>
            </div>
        </div>
    </div>
}


@Scripts.Render("~/bundles/scripts")
@Styles.Render("~/Content/css")

<script type="text/javascript">
    $(function () {
        $("form").bind('ajax:complete', function () {
            $.notify("Subsciption is created!", "success");
        });

        //$('.datepicker').data("DateTimePicker").FUNCTION();

        $('#servicestarted').datetimepicker({
            format: 'DD.MM.YYYY',
            locale: 'nb'
        });

        $('#serviceended').datetimepicker({
            format: 'DD.MM.YYYY',
            locale: 'nb'
        });
    });
</script>
