<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="buttonSign.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
  <data name="buttonSign.SuperTip" xml:space="preserve">
    <value>Click button to send this document for signing, an entityrecord number and the reciever's mail address should be in inserted as tags in the document, ex: quotenumber, ordernumber, accountnumber 1234567 recievermailaddress someone@example.com. The words should be separeted by space.</value>
  </data>
</root>